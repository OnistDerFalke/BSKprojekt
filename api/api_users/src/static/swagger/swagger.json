{
  "swagger": "2.0",

  "info": {
    "description": "An application that allows you to manage users",
    "version": "1.0.0",
    "title": "Users API"
  },

  "basePath": "api/",
  "host": "127.0.0.1:8080/",
  "schemes": ["http"],
  "produces": ["application/json"],
  "consumes": ["application/json"],

  "tags": [
    {
      "name": "Users",
      "description": "Requests allow to users managing"
    }
  ],

  "securityDefinitions": {
    "tokenAuth": {
      "type": "apiKey",
      "name": "token",
      "in": "header",
      "description": "Generated in server side token needed to successful authentication. Default key for swagger is {\"login\": \"swagger\", \"secret\": \"VGocPnk+SVfExl16TkrypU+8YoqlJaDzIaNh69RftGJjQPqNTholWrYqXNFhbhy7\", \"iv\": \"4UAaZzmD1VaxxRZP0fc1EA==\"}"
    }
  },

  "paths": {
    "/users": {
      "get": {
        "tags": ["Users"],
        "description": "Get all existing users",
        "operationId": "getAllUsers",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "All users response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetUsersResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "description": "Add new User",
        "operationId": "addUser",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/PostUserResponse"
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["Users"],
        "description": "Get details of existing user",
        "operationId": "getUserById",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "$ref": "#/definitions/GetUserResponse"
            }
          },
          "404": {
            "description": "User with provided id was not found"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "description": "Update an existing user with provided id",
        "operationId": "updateUserById",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutUser"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "User was updated"
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "User with provided id was not found"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "description": "Get all existing users",
        "operationId": "deleteUserById",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "202": {
            "description": "User was deleted"
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "User with provided id was not found"
          }
        }
      }
    }
  },
  "definitions": {
    "PostUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        }
      }
    },
    "PostUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetUsersResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "port":{
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "port":{
          "type": "integer",
          "format": "int32"
        },
        "date_created": {
          "type": "string",
          "format": "date-time"
        },
        "date-modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PutUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}